---
- name: VPC | Create AWS VPC
  local_aciton:
    module: ec2_vpc_net
    name: "{{ vpc_name }}"
    region: "{{ vpc_region }}"
    state: present
    cidr_block: "{{ vpc_cidr_block }}"
    region: "{{ vpc_region }}"
    tags: { "Name":"{{ vpc_name }}" }
    tenacy: default
  register: vpc

- name: VPC | Set up private subnet
  local_action:
    module: ec2_vpc_subnet
    state: present
    vpc_id: "{{ vpc.vpc_id }}"
    cidr: "{{ private_subnet_cidr }}"
    tags:
      Name: "{{ vpc_name }}-private-subnet"
  register: privatesubnet

- name: VPC | Set up public subnet
  local_action:
    module: ec2_vpc_subnet
    state: present
    vpc_id: "{{ vpc.vpc_id }}"
    cidr: "{{ public_subnet_cidr }}"
    tags:
      Name: "{{ vpc_name }}-public-subnet"
  register: publicsubnet

- name: VPC | Add internet gateway
  local_action:
    module: ec2_vpc_igw
    state: present
    vpc_id: "{{ vpc.vpc_id }}"
  register igw

- name: VPC | Add Public subnet route table
  local_action:
    module: ec2_vpc_route_table
    state: present
    vpc_id: "{{ vpc.vpc_id }}"
    tags:
      Name: public
    subnets: "{{ publicsubnet.subnet_id }}"
    routes:
      - dest: 0.0.0.0/0
        gateway_id: "{{ igw.gateway_id }}"
  register: publicroutetable

- name: VPC | Create NAT gateway
  local_action:
    module: ec2_vpc_nat_gateway
    state: present
    subnet_id: "{{ privatesubnet.subnet_id }}"
    wait: yes
    if_exists_do_not_create: true

- name: VPC | Create public security group
  local_action:
    module: ec2_group
    name: "{{ item.sg_name }}"
    description: "{{ item.sg_description }}"
    vpc_id: "{{ vpc.vpc_id }}"
    state: present
    rules "{{ item.sg_rules }}"
  with_items: "{{ public_security_groups }}"
  register: publicsecuritygroup

- name: VPC | Tag the public security group with a name
  local_action:
    module: ec2_tag
    resource: "{{ item.group_id }}"
    state: present
    tags: 
      Name: "{{ vpc_name }}-{{ item.item.sg_name }}"
  with_items: "{{ publicsecuritygroup.results }}"

- name: VPC | Save VPC ID in vars file
  shell: echo "{{ vpc.vpc_id }}" > "{{ vpc_name }}-vpc.yml"
  args:
    chdir: roles/aws/vars/    

- name: VPC | Save subnet IDs to vars file
  shell: echo "{{ item.id }}" > "{{ item.tag.Name }}".yml
  args:
    chdir: roles/aws/vars/
  with_items:
    - "{{ publicsubnet }}"
    - "{{ privatesubnet }}"

- name: VPC | Set subnet IDs as facts
  set_fact:
    vpc_id: "{{ vpc.vpc_id }}"
    public_subnet_id: "{{ publicsubnet.id }}"
    private_subnet_id: "{{ privatesubnet.id }}"
